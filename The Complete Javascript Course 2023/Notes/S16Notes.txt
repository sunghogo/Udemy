L244 Section Intro


L245 Section Roadmap


L246 Asynchronous JavaScript, AJAX and APIs
    Synchronous:
        Most code is Synchronous
        
        Synchronous code is executed Line by Line

        Thread of Execution:
            Part of execution context that actually executes the code in the computer's CPU

        Each line of code waits for previous line to finish;

        Long-running operations BLOCK code execution

    Asynchronous:
        Asynchronous code is executed AFTER a task that runs in the "background" finishes

        Asynchronous code is NON-BLOCKING

        Execution doesn't wait for asynchronous task to finish its work

        Asynchronous programming is coordinating behavior of a program over a period of time

        Callback functions alone do NOT make code asynchronous!

        .addEventListener does NOT automatically make code asynchronous! (since there is no asynchronous behavior at all)

    AJAX:
        Asynchronous JavaScript And XML (AJAX): Allows us toc communicate with remote web servers in an ASYNCHRONOUS way. With AJAX calls, we can REQUEST DATA from web servers dynamically.

        CLIENT (e.g browser) REQUEST (GET / POST / etc.) data from WEB SERVER (usually web API) that sends data back in RESPONSE

    API:
        Application Programming Interface: Piece of software that can be used by another piece of software, in order to allow APPLICATIONS to TALK to EACH OTHER

        There are many types of APIs in web development:
            DOM API, Geolocation API, Own Class API, "Online" API (Just "API")
        
        "Online" API: Application running on a server, that receives requests for data, and sends data back as response

        We can build OUR OWN web API's (requires back-end development, e.g. with node.js) or use 3rd-party APIs

        There is an API for everything:
            - Weather data
            - Data about countries
            - Flights data
            - Currency conversion data
            - APIs for sending email or SMS
            - Google Maps
            - Millions of possibilites...
    
    AJAX:
        XML is a data format that was popular in the past but is no longer used

        JSON data format is the most popular API data format (since it is basically a JS object converted to a string)


L247 IMPORTANT: API URL Change
    API URL Changed from:
        https://restcountries.eu/rest/v2/
    To:
        https://restcountries.com/v2/

        https://restcountries.com/v3.1/

    Public APIs:
        https://github.com/public-apis/public-apis

        Should have no authentication, HTTPS set to YES, and Cross Origin Resource Sharing (CORS) set to YES/Unknown 

        Search API Endpoint to look for URL

L248 Our First AJAX Call: XMLHttpRequest
    new XMLHttpRequest() constructor function is the old school way of doing AJAX calls:
        .open('HTTP request type', 'URL') method opens the request to the specified Endpoint

        .send() method sends the request asynchronously

        .addEventListener('load', 'callback function' {
            const [data] = JSON.parse(this.responseText)
        }) 
        is used to retrieve the response that is sent back ('this' refers to the response, while .responseText is the property containing the data in JSON)

        JSON.parse() function to turn the retrieved data into an array of objects

    Having multiple AJAX calls in parallel (happening at the same time) will have different order when the data arrives
